openapi: 3.0.0
info:
  title: Explorer API endpoints
  version: 0.9.0
  description: >
    All explorer endpoints are public.
    [`enable_blockchain_explorer` local configuration parameter](https://exonum.com/doc/architecture/configuration/#api)
    allows to turn explorer endpoints on/off.

servers:
- url: http://example.com/api/explorer/v1

tags:
- name: Read Requests
  description: Public read-only API available to everybody.

paths:
  /transactions:
    get:
      tags: [Read Requests]
      summary: Get transaction by hash
      description: >
        Searches for a transaction, either committed or uncommitted, by the hash.
      parameters:
      - in: query
        name: hash
        required: true
        description: The hash of the transaction to be searched.
        schema:
          $ref: "#/components/schemas/Hash"
      responses:
        200:
          description: >
            Known committed or uncommitted transaction on the blockchain.

            Uncommitted transactions are returned as `SerializedTransaction` objects
            with additional **type** field set to `in-pool`.

            Known transactions are returned as `KnownTransaction` objects
            with **type** field set to `committed`.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnownTransaction"
              example:
                type: "committed"
                content:
                  body:
                    amount: 152
                    from: "b0d6af8bbe45c574c5f9dd8876b5b037b38d1bf861fd7b90744957aa608ed0c2"
                    seed: 2953135335240383704
                    to: "99e396355cb2146aba0457a954ebdae36e09e3abe152693cfd1b9a0975850789"
                  protocol_version: 0
                  service_id: 128
                  message_id: 128
                  signature: "7d3c503d6dc02ca24faaeb37af227f060d0bcf5f40399fae7831eb68921fd00407f7845affbd234f352d9f1541d7e4c17b4cd47ec3f3208f166ec9392abd4d00"
                location:
                  block_height: 18
                  position_in_block: 261
                location_proof:
                  left: "07e641264ac4646495c54a379a5943bf88785bcf30a0b4c13f47d1e2e62b343d"
                  right:
                    left:
                      left:
                        left:
                          left:
                            left:
                              left: "78044db9c2713a11c2fe7bb66f27665b6ca0ecbb9e61e09381534d449c4c24c4"
                              right:
                                left:
                                  left: "f62e6a4d8b9c2c0cfb31ea599e08e6e3fe2337169ce07008d91390958e0613d4"
                                  right:
                                    val: "f6415994136527a24d022595ec0d40f51e2a0c4230a34792a5203df779e3ffaf"
                                right: "daee36b5b7c24a831a62539d534c56e4f234a83ce83876fee48193d8eefabfb2"
                            right: "df8bb7e697e6eb7828975b67f64a77af06379435f4330f0cb0b7a21d18b616db"
                          right: "59ab567cf0d1c09c5050680ea4ed4650238023666b0e5d90855d82dc83d1f982"
                        right: "cf5fa45701ba6ae795da58a504eb1608075d7bbedf05c8f6f448aad4dbd03968"
                      right: "eb583ba724a3b371c243f1268dfca2929c704fe0546875e5dfeb90860ac3533f"
                    right: "bea1bae302dbf975cafa064ecfbc39f2cdcba5fe7ffddb2208c060cd9778c483"
                status:
                  type: success
        404:
          description: >
            Unknown transaction.
            Response contains only **type** field set to `unknown`.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownTransaction"
              example:
                type: "unknown"

  /block:
    get:
      tags: [Read Requests]
      summary: Get block by height
      description: >
        Returns the content for a block of a specific height.
      parameters:
      - in: query
        name: height
        required: true
        description: The height of the desired block.
        schema:
          $ref: "#/components/schemas/Height"
      responses:
        200:
          description: >
            A JSON object describing the block.
          content:
            application/json:
              schema:
                type: object
                properties:
                  block:
                    $ref: "#/components/schemas/BlockHeader"
                  precommits:
                    type: array
                    description: The list of `Precommit` messages supporting the block.
                    items:
                      $ref: "#/components/schemas/Precommit"
                  txs:
                    type: array
                    description: The list of hashes of transactions included into the block.
                    items:
                      $ref: "#/components/schemas/Hash"
                example:
                  block:
                    height: 20
                    prev_hash: "a6d3d838e4edc29bd977eba3885a4ef30a020d166ac0e9c51737ae97b8fb3bce"
                    proposer_id: 2
                    schema_version: 0
                    state_hash: "8ad43ece286a45b6269183cc3fab215066c31054b06c9ef391697b88c03bb63c"
                    tx_count: 0
                    tx_hash: "0000000000000000000000000000000000000000000000000000000000000000"
                  precommits:
                    - body:
                        block_hash: "272913062630e0e6ec3f7db1db91811052b829f0fdf1f27a0aec212f1684cf76"
                        height: 20
                        propose_hash: "8fcca116a080ccb0d2b31768f7c03408707d595ec9b48813a2e8aef2b95673cd"
                        round: 2
                        time: "2018-05-17T10:43:59.404962Z"
                        validator: 2
                      message_id: 4
                      protocol_version: 0
                      service_id: 0
                      signature: "6cc77069b1c23083159decf219772dc904dc974342b19e558ee8a8fb0ef0233adcc1050700311907d6e4ad27c3910e38cda9bb49fcd8ad35740a632cceda870d"
                    - body:
                        block_hash: "272913062630e0e6ec3f7db1db91811052b829f0fdf1f27a0aec212f1684cf76"
                        height: 20
                        propose_hash: "8fcca116a080ccb0d2b31768f7c03408707d595ec9b48813a2e8aef2b95673cd"
                        round: 2
                        time: "2018-05-17T10:49:09.161549Z"
                        validator: 3
                      message_id: 4
                      protocol_version: 0
                      service_id: 0
                      signature: "e6cb64f5d7a80e10fd8367a8379342c32ecb164906002ada775643000f4cbde7e1735a068c17aa7de0ce491fdfa05b3de9519018e4370e13f48675857d4e0307"
                    - body:
                        block_hash: "272913062630e0e6ec3f7db1db91811052b829f0fdf1f27a0aec212f1684cf76"
                        height: 20
                        propose_hash: "8fcca116a080ccb0d2b31768f7c03408707d595ec9b48813a2e8aef2b95673cd"
                        round: 2
                        time: "2018-05-17T10:49:11.161549Z"
                        validator: 0
                      message_id: 4
                      protocol_version: 0
                      service_id: 0
                      signature: "2eab829b3fc123025df6adac3f06bbafcd7882cee7601ad7791e5cc1171349c9f107b229543ee89cff2c323aafef228e850da36c4578c6c593fbb085a079d60e"
                  txs: []

  /blocks:
    get:
      tags: [Read Requests]
      summary: Get blocks in range
      description: >
        Returns the explored range and the corresponding headers.
        The range specifies the smallest and largest heights traversed
        to collect at most `count` blocks.
      parameters:
      - in: query
        name: count
        required: true
        description: >
          The number of blocks to return.
          Should not be greater than [MAX_BLOCKS_PER_REQUEST](https://github.com/exonum/exonum/blob/master/exonum/src/api/public/blockchain_explorer.rs).
        schema:
          type: integer
          example: 5
          minimum: 0
      - in: query
        name: skip_empty_blocks
        description: >
          If `true`, then only non-empty blocks are returned.
          The default value is `false`.
        schema:
          type: boolean
          example: true
          default: false
      - in: query
        name: latest
        description: >
          The maximum height of the returned blocks.
          The blocks are returned in reverse order,
          starting from the `latest` and at least up to the `latest - count + 1`.
          The default value is the height of the latest block in the blockchain.
        schema:
          allOf:
            - $ref: "#/components/schemas/Height"
            - example: 300
            - nullable: true
      responses:
        200:
          description: >
            The JSON object of the explored block range `range` and the array `blocks`
            of the BlockHeader objects.
            The range specifies the largest and the smallest heights of blocks
            that have been traversed to collect at most `count` blocks.
            The largest height `end` equals to `latest + 1` if provided
            or to the height of the latest block in the blockchain,
            the smallest height `start` takes values in `0..latest - count + 1`.
            Blocks in the array are sorted in descending order according to their heights.
            Height of any block in the array is greater or equal than `start` and less than `end`.

            Assume the following request:

            `GET {explorer_base_path}/blocks?count=5&skip_empty_blocks=true`

            Then you may get the following example response.
            That is, to collect 5 non-empty blocks from the tail of the blockchain,
            range from 100 to 2 has been traversed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  blocks:
                    type: array
                    items:
                      $ref: "#/components/schemas/BlockHeader"
                  range:
                    type: object
                    properties:
                      start:
                        $ref: "#/components/schemas/Height"
                      end:
                        $ref: "#/components/schemas/Height"
                example:
                  blocks:
                    - height: 18
                      prev_hash: "ae24b1e0dca2df3c7565dc50e433d6d70bf5424a1ba40c221b0a7c27f7270a7e"
                      proposer_id: 3
                      schema_version: 0
                      state_hash: "8ad43ece286a45b6269183cc3fab215066c31054b06c9ef391697b88c03bb63c"
                      tx_count: 426
                      tx_hash: "f8e0a4ef1ee41ce82206757620c3a5f2d661fe2b5c939ed438f6ac287320709e"
                    - height: 14
                      prev_hash: "87d3158f91ce3b3f8c8fab51ab15f0ddcb92a322b962c5a2b34299456c28f452"
                      proposer_id: 3
                      schema_version: 0
                      state_hash: "8ad43ece286a45b6269183cc3fab215066c31054b06c9ef391697b88c03bb63c"
                      tx_count: 1000
                      tx_hash: "ad72304da7ded4039c54523c6e8372571df8851707e608c60f7a31d1e77515ad"
                    - height: 10
                      prev_hash: "f9b4f236d5ef96fe9b06e77ff5e6f9c9c6352e2822846e98d427147ee89d0aee"
                      proposer_id: 3
                      schema_version: 0
                      state_hash: "8ad43ece286a45b6269183cc3fab215066c31054b06c9ef391697b88c03bb63c"
                      tx_count: 1000
                      tx_hash: "687d757b742a28110c40d9246586767a49b4c2521732b9ac23686481168d7e6c"
                    - height: 6
                      prev_hash: "f9ecccb5be51363744cffbb0b8241c2541c3aa7e53f1b9cca01d49d4991ae693"
                      proposer_id: 3
                      schema_version: 0
                      state_hash: "8ad43ece286a45b6269183cc3fab215066c31054b06c9ef391697b88c03bb63c"
                      tx_count: 1000
                      tx_hash: "577b4d67d045d8aa08e1b63a08fe77f09ac2ae8b2f46a6c3294e4ef4efaceb6c"
                    - height: 2
                      prev_hash: "d8d583444b823db312be85dc5dfa6d41b658c2bfe8caf97cb4b7372f2154ad4b"
                      proposer_id: 3
                      schema_version: 0
                      state_hash: "8ad43ece286a45b6269183cc3fab215066c31054b06c9ef391697b88c03bb63c"
                      tx_count: 1000
                      tx_hash: "94f251c0350c95024f46d26cbe0f9d2ea309e2817da4bab575fc4c571140291f"
                  range:
                    start: 2
                    end: 101

components:
  schemas:
    Hash:
      type: string
      pattern: "^[0-9a-f]{64}$"
      example: "94f251c0350c95024f46d26cbe0f9d2ea309e2817da4bab575fc4c571140291f"
      description: >
        Hexadecimal string representing a hash (64 hex digits).
    Signature:
      type: string
      pattern: "^[0-9a-f]{128}$"
      example: "2eab829b3fc123025df6adac3f06bbafcd7882cee7601ad7791e5cc1171349c9..."
      description: >
        Hexadecimal string representing a signature (128 hex digits).
    Height:
      type: integer
      description: Exonum block height.
      minimum: 0
      maximum: 18446744073709551615
    Time:
      type: string
      format: date-time
      example: "2018-05-17T10:45:56.057753Z"
      description: >
        A string which combines date and time in UTC
        as per [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
    TransactionType:
      type: string
      description: >
        Transaction type, can be:

        - **committed:** committed transaction (in blockchain)

        - **in-pool:** uncommitted transaction (in the pool of unconfirmed transactions)

        - **unknown:** unknown transaction
      enum:
      - committed
      - in-pool
      - unknown
    TransactionStatus:
      oneOf:
        - $ref: "#/components/schemas/TransactionStatusSuccess"
        - $ref: "#/components/schemas/TransactionStatusError"
        - $ref: "#/components/schemas/TransactionStatusPanic"
      discriminator:
        propertyName: type
    TransactionStatusType:
      type: object
      description: >
        [Transaction execution](https://exonum.com/doc/architecture/transactions/#execute) status.
      required: [type]
      properties:
        type:
          type: string
          description: >
            Execution status kind:

            - **success** denotes a successfully completed transaction

            - **error** denotes a transaction that has returned an error
              (for example, because of transaction parameters not satisfying
              context-dependent checks)

            - **panic** denotes a transaction that has raised a runtime exception
              (for example, attempted to divide by zero)
          enum:
          - sucess
          - error
          - panic
    TransactionStatusSuccess:
      allOf:
        - $ref: "#/components/schemas/TransactionStatusType"
    TransactionStatusError:
      allOf:
        - $ref: "#/components/schemas/TransactionStatusType"
        - required: [type, code]
        - properties:
            code:
              type: integer
              minimum: 0
              maximum: 255
              description: >
                Error code supplied by the service developer.
                Has service-specific meaning.
            description:
              type: string
              description: >
                Optional human-readable error description.
    TransactionStatusPanic:
      allOf:
        - $ref: "#/components/schemas/TransactionStatusType"
        - properties:
            description:
              type: string
              description: >
                Optional human-readable panic description.
    TransactionLocation:
      type: object
      description: Transaction position in the blockchain.
      properties:
        block_height:
          allOf:
            - $ref: "#/components/schemas/Height"
            - description: The height of the block including this transaction.
        position_in_block:
          type: integer
          description: Position of the transaction in the block.
          minimum: 0
          maximum: 18446744073709551615
    UnknownTransaction:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/TransactionType"
    KnownTransaction:
      oneOf:
        - $ref: "#/components/schemas/KnownUncommittedTransaction"
        - $ref: "#/components/schemas/KnownCommittedTransaction"
      discriminator:
        propertyName: type
    KnownUncommittedTransaction:
      allOf:
        - $ref: "#/components/schemas/TransactionType"
        - $ref: "#/components/schemas/SerializedTransaction"
    KnownCommittedTransaction:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/TransactionType"
        content:
          $ref: "#/components/schemas/SerializedTransaction"
        location:
          $ref: "#/components/schemas/TransactionLocation"
        location_proof:
          $ref: "#/components/schemas/ListProof"
        status:
          $ref: "#/components/schemas/TransactionStatus"
    ListProof:
      description: >
        [Merkle proof](https://exonum.com/doc/advanced/merkelized-list/#merkle-tree-proofs)
        tying transaction to the tx_hash of the containing block.
      anyOf:
        - type: object
          properties:
            left:
              $ref: "#/components/schemas/ListProof"
            right:
              $ref: "#/components/schemas/ListProof"
        - type: object
          properties:
            left:
              $ref: "#/components/schemas/ListProof"
            right:
              $ref: "#/components/schemas/Hash"
        - type: object
          properties:
            left:
              $ref: "#/components/schemas/Hash"
            right:
              $ref: "#/components/schemas/ListProof"
        - type: object
          properties:
            left:
              $ref: "#/components/schemas/ListProof"
        - type: object
          properties:
            val: {}
    ValidatorId:
      type: integer
      minimum: 0
      maximum: 65535
      description: Validators identifier.
    MessageHeader:
      type: object
      properties:
        protocol_version:
          type: integer
          minimum: 0
          maximum: 255
          description: The major version of the Exonum serialization protocol. Currently, 0.
        service_id:
          type: integer
          minimum: 0
          maximum: 65535
          description: Unique service identifier.
        message_id:
          type: integer
          minimum: 0
          maximum: 65535
          description: ID of the transaction message.
        body:
          type: object
          description: Body of the transaction.
        signature:
          allOf:
            - $ref: "#/components/schemas/Signature"
            - description: Signature of the transaction message.
    SerializedTransaction:
      allOf:
        - $ref: "#/components/schemas/MessageHeader"
        - description: Transaction with the specified hash.
    BlockHeader:
      type: object
      description: Description of a block in blockchain.
      properties:
        height:
          $ref: "#/components/schemas/Height"
        prev_hash:
          allOf:
            - $ref: "#/components/schemas/Hash"
            - description: Hash of the previous block.
        proposer_id:
          allOf:
            - $ref: "#/components/schemas/ValidatorId"
            - description: ID of the validator that created an approved block proposal.
        state_hash:
          allOf:
            - $ref: "#/components/schemas/Hash"
            - description: >
                Hash of the current
                [Exonum state](https://exonum.com/doc/glossary/#blockchain-state)
                after applying transactions in the block.
        tx_count:
          type: integer
          minimum: 0
          maximum: 4294967295
          description: Number of transactions included into the block.
        tx_hash:
          allOf:
            - $ref: "#/components/schemas/Hash"
            - description: Root hash of the transactions Merkle tree.
    Precommit:
      allOf:
        - $ref: "#/components/schemas/MessageHeader"
        - description: >
            Precommit is an Exonum message, serialized according to message serialization rules.
        - properties:
            body:
              type: object
              description: The content of the `Precommit` message.
              properties:
                block_hash:
                  allOf:
                    - $ref: "#/components/schemas/Hash"
                    - description: >
                        The hash of the current block (the `Precommit` message was created for).
                height:
                  allOf:
                    - $ref: "#/components/schemas/Height"
                    - description: The height of the current block.
                propose_hash:
                  allOf:
                    - $ref: "#/components/schemas/Hash"
                    - description: >
                        Hash of the corresponding `Propose`.
                round:
                  type: integer
                  minimum: 0
                  maximum: 4294967295
                  description: The round when the block proposal was created.
                time:
                  allOf:
                    - $ref: "#/components/schemas/Time"
                    - description: >
                        UTC time of the validator that created the block proposal.
                validator:
                  allOf:
                    - $ref: "#/components/schemas/ValidatorId"
                    - description: ID of the validator that created this `Precommit` message.
