openapi: 3.0.0
info:
  title: Time Oracle
  version: 0.9.0
  description: >
    [**exonum-time**](https://github.com/exonum/exonum/tree/master/services/time)
    is a time oracle service for Exonum.
    This service allows determining time,
    importing it from the external world to the blockchain
    and keeping its current value in the blockchain.

servers:
- url: http://example.com/api/services/exonum_time/v1

tags:
- name: Read Requests
  description: Public read-only API available to everybody.
- name: Private API
  description: Maintenance API for Exonum node administrators.

paths:
  /current_time:
    get:
      tags: [Read Requests]
      summary: Get current time
      description: >
        Returns the current consolidated time.
      responses:
        200:
          description: >
            JSON string with current consolidated time.

            `null` is returned if there is no consolidated time.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Time"
                  - nullable: true

  /validators_times:
    get:
      tags: [Private API]
      summary: Get timestamps of current validators
      description: >
        Returns the latest timestamps indicated by current validator nodes.
      responses:
        200:
          description: >
            JSON array with validators and their corresponding timestamps.

            `time` field may be `null` if validator time is unknown.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    public_key:
                      allOf:
                        - $ref: "#/components/schemas/Hash"
                        - description: Public key of the validator.
                    time:
                      allOf:
                        - $ref: "#/components/schemas/Time"
                        - nullable: true
                example:
                  - public_key: "83955565ee605f68fe334132b5ae33fe4ae9be2d85fbe0bd9d56734ad4ffdebd"
                    time: "2018-05-17T10:45:56.057753Z"
                  - public_key: "52baa9d4c4029b925cedf1a1515c874a68e9133102d0823a6de88eb9c6694a59"
                    time: null

  /validators_times/all:
    get:
      tags: [Private API]
      summary: Get timestamps of all validators
      description: >
        Returns the latest timestamps indicated by all validator nodes for which time is known.

        This includes timestamps from current validators known by the node
        (as provided by `/validators_times`).
        The endpoint may return additional timestamps from past validators
        which are not present in the current node configuration
        but were there in the past.
      responses:
        200:
          description: >
            JSON array with validators and their corresponding timestamps.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    public_key:
                      allOf:
                        - $ref: "#/components/schemas/Hash"
                        - description: Public key of the validator.
                    time:
                      $ref: "#/components/schemas/Time"
                example:
                  - public_key: "83955565ee605f68fe334132b5ae33fe4ae9be2d85fbe0bd9d56734ad4ffdebd"
                    time: "2018-05-17T10:47:08.161549Z"
                  - public_key: "f6753f4b130ce098b1322a6aac6accf2d5770946c6db273eab092197a5320717"
                    time: "2018-05-17T10:47:08.161549Z"

components:
  schemas:
    Hash:
      type: string
      pattern: "^[0-9a-f]{64}$"
      example: "94f251c0350c95024f46d26cbe0f9d2ea309e2817da4bab575fc4c571140291f"
      description: >
        Hexadecimal string representing a hash (64 hex digits).
    Signature:
      type: string
      pattern: "^[0-9a-f]{128}$"
      example: "2eab829b3fc123025df6adac3f06bbafcd7882cee7601ad7791e5cc1171349c9f107b229543ee89cff2c323aafef228e850da36c4578c6c593fbb085a079d60e"
      description: >
        Hexadecimal string representing a signature (128 hex digits).
    Time:
      type: string
      format: date-time
      example: "2018-05-17T10:45:56.057753Z"
      description: >
        A string which combines date and time in UTC
        as per [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
