site_name: Exonum Documentation
docs_dir: src
theme:
  name: material
  favicon: 'assets/images/favicon.ico'
  logo: 'assets/images/logo.svg" alt="Exonum Logo'
  custom_dir: theme
  palette:
    primary: 'light green'
    accent: 'lime'

extra_css:
  - assets/stylesheets/extra.css
repo_name: 'exonum/exonum'
repo_url: 'https://github.com/exonum/exonum'
edit_uri: 'doc/blob/master/src'

site_url: 'https://exonum.com/doc/'
site_author: 'Exonum Team'
site_description: Exonum is a blockchain framework that allows to build secure permissioned blockchain applications.

copyright: Â© 2017 Exonum Team. Available under <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="license">CC BY-NC-SA 4.0</a> license

extra:
  og_image: 'assets/images/logo-docs.png'
  social:
    - type: 'github'
      link: 'https://github.com/exonum'
    - type: 'facebook'
      link: 'https://www.facebook.com/Exonum'
    - type: 'twitter'
      link: 'https://twitter.com/BitFuryGroup'
google_analytics:
  - 'UA-85962154-1'
  - 'auto'
markdown_extensions:
  - codehilite
  - admonition
  - meta
  - pymdownx.superfences
pages:
  # Short description of Exonum, documentation and how to use it
  - 'Home': 'index.md'
  - 'Get started':
    # What is Exonum 'as a box', from point of view of external developer
    - 'What is Exonum': 'get-started/what-is-exonum.md'
    # How does Exonum look from the inside: nodes, validators, clients, blocks, consensus, genesis block;
    # links to necessary documentation parts
    - 'Design overview': 'get-started/design-overview.md'
    # Installation guide
    - 'Install': 'get-started/install.md'
    # Writing one's first Exonum service
    - 'Create service': 'get-started/create-service.md'
  - 'Architecture':
    # Includes guidelines for services
    - 'Services': 'architecture/services.md'
    # What is transaction? (purity, sequential consistency, non-replayability, signatures)
    - 'Transactions': 'architecture/transactions.md'
    # How to make Public API communication (both server and client side)
    - 'Clients': 'architecture/clients.md'
    - 'JavaScript client':
      # What is JavaScript light client
      - 'Getting started': 'javascript-client/getting-started.md'
      # Description of built-in types, declaration of custom types, arrays
      - 'Data types': 'javascript-client/data-types.md'
      # Serialization methods in light client
      - 'Serialization': 'javascript-client/serialization.md'
      # Cryptographic hash function
      - 'Hash': 'javascript-client/hash.md'
      # Sign data using key pair
      - 'Signature': 'javascript-client/signature.md'
      # Prepare transaction in light client
      - 'Transactions': 'javascript-client/transactions.md'
      # Merkle trees and their variants
      - 'Cryptographic proofs': 'javascript-client/proofs.md'
      # Prove the existence of data in a blockchain
      - 'Integrity checks': 'javascript-client/integrity-checks.md'
      # List of built-in helpers
      - 'Helpers': 'javascript-client/helpers.md'
      # Notes about contributing to light client
      - 'Contributing': 'javascript-client/contributing.md'
    # Local configuration - how to roughly configure a node (make it ready to run)
    - 'Configuration': 'architecture/configuration.md'
    # Includes blockchain, genesis block, indexes, proofs, etc.
    - 'Storage': 'architecture/storage.md'
    # How the data is serialised and deserialised to be transfered through the network
    - 'Serialization': 'architecture/serialization.md'
    # Consensus overview
    - 'Consensus': 'architecture/consensus.md'
  - 'Advanced':
    # How the network module works: peer discovery, p2p connections
    - 'Network': 'advanced/network.md'
    # Managing node through managing API ("RPC")
    - 'Node management': 'advanced/node-management.md'
    # What is sandbox testing and simple example of one of sandbox tests
    - 'Service testing': 'advanced/service-testing.md'
    # Configuration change service documentation
    - 'Configuration updater': 'advanced/configuration-updater.md'
    # Anchoring service documentation
    - 'Bitcoin anchoring': 'advanced/bitcoin-anchoring.md'
    # Merkle index overview
    - 'Merkelized list': 'advanced/merkelized-list.md'
    - 'Consensus':
      # Consensus specification
      - 'Consensus specification': 'advanced/consensus/specification.md'
      # Requests specification
      - 'Requests': 'advanced/consensus/requests.md'
  # Includes roadmap and features list
  - 'Roadmap': 'roadmap.md'
  # How to contribute to Exonum repositories
  - 'Contributing': 'contributing.md'
  - 'Glossary': 'glossary.md'
