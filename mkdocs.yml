site_name: Exonum Documentation
docs_dir: src
theme: material
theme_dir: theme
repo_name: 'exonum/exonum-core'
repo_url: 'https://github.com/exonum/exonum-core'
site_favicon: 'images/favicon.ico'
extra:
  logo: 'images/logo.svg'
  palette:
    primary: 'blue grey'
    accent: 'lime'
  social:
    - type: 'github'
      link: 'https://github.com/exonum'
#    - type: 'twitter'
#      link: 'https://twitter.com/BitFuryGroup'
    - type: 'facebook'
      link: 'https://www.facebook.com/Exonum'
#    - type: 'linkedin'
#      link: 'https://www.linkedin.com/company-beta/5178019'
google_analytics:
  - 'UA-85962154-1'
  - 'auto'
markdown_extensions:
  - codehilite
  - pymdownx.arithmatex
  - pymdownx.betterem(smart_enable=all)
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.emoji:
      emoji_generator: !!python/name:pymdownx.emoji.to_svg
  - pymdownx.inlinehilite
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.superfences
  - pymdownx.tasklist(custom_checkbox=true)
  - pymdownx.tilde
copyright: Â© 2017 Bitfury Group Limited
pages:
  # Short description of Exonum, documentation and how to use it
  - 'Home': 'index.md'
  - 'Getting started':
    # What is Exonum 'as a box', from point of view of external developer
    - 'What is Exonum': 'home/what-is-exonum.md'
    # How does Exonum look from the inside: nodes, validators, clients, blocks, consensus, genesis block;
    # links to necessary documentation parts
    - 'Design overview': 'home/design-overview.md'
    - 'Glossary of terms': 'home/glossary.md'
    - 'Cryptocurrency tutorial':
      - 'Introduction': 'home/cryptocurrency/intro.md'
  - 'Architecture':
    # Local configuration - how to roughly configure a node (make it ready to run)
    - 'Configuration': 'architecture/configuration.md'
    # Includes blockchain, genesis block, indexes, proofs, etc.
    - 'Storage': 'architecture/storage.md'
    # What is transaction? (purity, sequential consistency, non-replayability, signatures)
    - 'Transactions': 'architecture/transactions.md'
    # Includes guidelines for services
    - 'Services': 'architecture/services.md'
    # How to make Public API communication (both server and client side)
    - 'Clients': 'architecture/clients.md'
  - 'Advanced topics':
    # How the network module works: peer discovery, p2p connections
    - 'Internode communication': 'advanced/network.md'
    # How the data is serialised and deserialised to be transfered through the network
    - 'Serialization': 'advanced/serialization.md'
    - 'Merkle index': 'advanced/merkle-index.md'
    - 'Merkle Patricia index': 'advanced/merkle-patricia-index.md'
    - 'Services':
      # Configuration change service documentation
      - 'Configuration': 'advanced/services/configuration.md'
      # Anchoring service documentation
      - 'Bitcoin anchoring': 'advanced/services/anchoring.md'
    - 'Consensus specification':
      # Consensus specification, including proofs
      - 'Consensus': 'advanced/consensus/consensus.md'
      # Leader election algorithm specification
      - 'Leader election': 'advanced/consensus/leader-election.md'
      # Requests specification
      - 'Requests': 'advanced/consensus/requests.md'
      # Timeout adjustment module specification
      - 'Timeouts adjustment': 'advanced/consensus/timeouts-adjustment.md'
    # DoS attacks description. How we (are going to) protect the system from it
    - 'DoS attacks': 'advanced/dos-attacks.md'
    # What is sandbox testing and simple example of one of sandbox tests
    - 'Sandbox testing': 'advanced/sandbox.md'
  - 'Development':
    # Includes roadmap and features list
    - 'Roadmap': 'dev/roadmap.md'
    # How to contribute to Exonum repositories
    - 'Contributing': 'dev/contributing.md'
    - 'License': 'dev/license.md'
